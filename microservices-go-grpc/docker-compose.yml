version: "3.7"

services:
  bff-service:
    container_name: "bff-service_go"
    image: uid4oe/go-ms-bff:latest
    networks:
      - uid4oe
    ports:
      - 8080:8080
    command: /main
    env_file:
      - .env
  user-service:
    container_name: "user-service_go"
    image: uid4oe/go-ms-user:latest
    networks:
      - uid4oe
    ports:
      - 50059:50051
    command: /main
    restart: always
    env_file:
      - .env
  advice-service:
    container_name: "advice-service_go"
    image: uid4oe/go-ms-advice:latest
    networks:
      - uid4oe
    ports:
      - 50052:50052
    command: /main
    restart: always
    env_file:
      - .env
  ui:
    container_name: "ui"
    image: uid4oe/ms-grpc-ui:latest
    networks:
      - uid4oe
    ports:
      - 3000:80
  mongodb:
    container_name: "mongodb"
    image: mongo:latest
    hostname: mongodb
    restart: always
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    env_file:
      - .env
    networks:
      - uid4oe
    ports:
      - 27017:27017
  postgres:
    container_name: "postgres"
    image: postgres:latest
    hostname: postgres
    user: postgres
    restart: always
    volumes: 
      - postgres:/var/lib/postgresql/data
      - ./advice.sql:/docker-entrypoint-initdb.d/create_tables.sql
    env_file:
      - .env
    networks:
      - uid4oe
    command: 'postgres'
    ports:
      - '5432:5432'


volumes:
  mongodb:
  mongoconfig:
  postgres:

networks:
  uid4oe:
    external: true
